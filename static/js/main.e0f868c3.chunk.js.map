{"version":3,"sources":["hooks/CounterWithUseReducer.tsx","hooks/CounterWithUseState.tsx","hooks/CounterWithUseContext.tsx","hooks/SampleOfUseEffect.tsx","hooks/FibonacciCounterWithUseMemo.tsx","hooks/SampleOfUseRef.tsx","hooks/SampleOfCustomHooks.tsx","AppRouter.tsx","serviceWorker.ts","index.tsx"],"names":["ActionType","CounterWithUseState","_useState","useState","_useState2","Object","slicedToArray","count","setCount","react_default","a","createElement","Fragment","onClick","MultiplyCounter","useContext","CounterContext","CounterWithUseContext_SquareCounter","SquareCounter","createContext","CounterWithUseContext","Provider","value","CounterWithUseContext_MultiplyCounter","reducer","state","action","type","Increment","Decrement","Reset","Error","initialState","CounterWithUseReducer","_useReducer","useReducer","_useReducer2","dispatch","fibonacci","n","FibonacciCounterWithUseMemo","props","rerender","memoTimes","useRef","times","memoStart","now","memoResult","useMemo","memoEnd","start","end","current","push","style","display","map","time","i","key","FocusedInput","inputEl","ref","focus","TextArea","textareaEl","textEl","text","setText","onChange","e","target","HeaderHeight","_useState3","_useState4","height","setHeight","measuredRef","useCallback","node","getBoundingClientRect","color","backgroundColor","Math","round","SampleOfUseRef","SampleOfUseRef_FocusedInput","SampleOfUseRef_TextArea","SampleOfUseRef_HeaderHeight","Loading","TodoItem","_ref","userId","title","completed","SampleOfUseEffect","todoId","setTodoId","status","setStatus","_useState5","_useState6","todo","setTodo","useEffect","_fetch","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","concat","sent","data","Success","t0","console","error","message","stop","apply","this","arguments","fetch","SampleOfUseEffect_Loading","buttons","SampleOfUseEffect_Error","SampleOfUseEffect_TodoItem","SampleOfCustomHooks","_useFetch","useFetch","_useFetch2","SampleOfCustomHooks_Loading","SampleOfCustomHooks_Error","SampleOfCustomHooks_TodoItem","Header","react_router_dom","to","href","AppRouter","basename","AppRouter_Header","react_router","exact","path","component","hooks_FibonacciCounterWithUseMemo","useRefSample","Boolean","window","location","hostname","match","ReactDOM","render","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0f868c3.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n\n// useReducer\n\ninterface State {\n  count: number;\n}\n\ninterface Action {\n  type: ActionType;\n}\n\nenum ActionType {\n  Increment = \"Increment\",\n  Decrement = \"Decrement\",\n  Reset = \"Reset\"\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.Increment:\n      return { count: state.count + 1 };\n    case ActionType.Decrement:\n      return { count: state.count - 1 };\n    case ActionType.Reset:\n      return { count: 0 };\n    default:\n      throw new Error();\n  }\n};\n\nconst initialState: State = { count: 0 };\n\nconst CounterWithUseReducer: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <button onClick={() => dispatch({ type: ActionType.Increment })}>\n        +\n      </button>\n      <button onClick={() => dispatch({ type: ActionType.Decrement })}>\n        -\n      </button>\n      {state.count}\n      <button onClick={() => dispatch({ type: ActionType.Reset })}>\n        reset\n      </button>\n    </>\n  );\n};\n\nexport default CounterWithUseReducer;\n","import React, { useState } from \"react\";\n\n// useState\n\nconst CounterWithUseState: React.FC = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <button onClick={() => setCount(count + 1)}>+</button>\n      {count}\n      <button onClick={() => setCount(count - 1)}>-</button>\n      <button onClick={() => setCount(0)}>reset</button>\n    </>\n  );\n};\n\nexport default CounterWithUseState;\n","import React, { createContext, useContext, useState } from \"react\";\n\n// useContext\n\nconst MultiplyCounter: React.FC = () => {\n  const count = useContext<number>(CounterContext);\n  return (\n    <>\n      <p>multiply: {count * 2}</p>\n      <SquareCounter />\n    </>\n  );\n};\n\nconst SquareCounter: React.FC = () => {\n  const count = useContext<number>(CounterContext);\n  return <p>square: {count * count}</p>;\n};\n\nconst CounterContext = createContext<number>(0);\n\nconst CounterWithUseContext: React.FC = () => {\n  const [count, setCount] = useState<number>(0);\n  return (\n    <CounterContext.Provider value={count}>\n      {count}\n      <button onClick={() => setCount(count + 1)}>+</button>\n      <MultiplyCounter />\n    </CounterContext.Provider>\n  );\n};\n\nexport default CounterWithUseContext;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// useEffect\n\ninterface Todo {\n  userId: number;\n  title: string;\n  completed: boolean;\n}\n\nenum ActionType {\n  Loading = \"Loading\",\n  Success = \"Success\",\n  Error = \"Error\"\n}\n\nconst Loading: React.FC = () => <>Loading</>;\n\nconst Error: React.FC = () => <>Error</>;\n\nconst TodoItem: React.FC<Todo> = ({ userId, title, completed }) => {\n  return (\n    <>\n      <p>User ID : {userId}</p>\n      <p>Title : {title}</p>\n      <p>Completed : {completed ? \"true\" : \"false\"}</p>\n    </>\n  );\n};\n\nconst SampleOfUseEffect: React.FC = () => {\n  const [todoId, setTodoId] = useState(1);\n  const [status, setStatus] = useState(ActionType.Loading);\n  const [todo, setTodo] = useState(null);\n\n  useEffect((): void => {\n    async function fetch(): Promise<any> {\n      try {\n        const res = await axios.get(\n          `https://jsonplaceholder.typicode.com/todos/${todoId}`\n        );\n        setTodo(res.data);\n        setStatus(ActionType.Success);\n      } catch (e) {\n        setStatus(ActionType.Error);\n        console.error(e.message);\n      }\n    }\n\n    fetch();\n  }, [todoId]);\n\n  if (todo === null) {\n    return <Loading />;\n  }\n\n  const buttons = (\n    <div>\n      <button onClick={() => setTodoId(todoId + 1)}>+</button>\n      <button onClick={() => setTodoId(1)}>reset</button>\n      <p>Todo ID: {todoId}</p>\n    </div>\n  );\n\n  if (status === ActionType.Loading || status === ActionType.Error) {\n    return (\n      <>\n        {buttons}\n        {status === ActionType.Loading ? <Loading /> : <Error />}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {buttons}\n      <TodoItem {...todo} />\n    </>\n  );\n};\n\nexport default SampleOfUseEffect;\n","import React, { useState, useMemo, useRef } from \"react\";\nimport now from \"performance-now\";\n\ninterface Target {\n  n: number;\n}\n\n// useMemo\nconst fibonacci = (n: number): number =>\n  n > 2 ? fibonacci(n - 1) + fibonacci(n - 2) : 1;\n\nconst FibonacciCounterWithUseMemo: React.FC<Target> = props => {\n  const [_, rerender] = useState<any>(null);\n  const memoTimes = useRef<number[]>([]);\n  const times = useRef<number[]>([]);\n\n  // Memoize\n  const memoStart = now();\n  const memoResult = useMemo(() => fibonacci(props.n), [props.n]);\n  const memoEnd = now();\n\n  // No Memoize\n  const start = now();\n  const result = fibonacci(props.n);\n  const end = now();\n\n  memoTimes.current.push(memoEnd - memoStart);\n  times.current.push(end - start);\n\n  return (\n    <div>\n      <p>target: {props.n}</p>\n      <p>fibonacci: {memoResult}</p>\n      <button onClick={rerender}>rerender</button>\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <p>No Memomized</p>\n          <ol>\n            {times.current.map((time, i) => (\n              <li key={i}>{time}</li>\n            ))}\n          </ol>\n        </div>\n        <div>\n          <p>Memoized</p>\n          <ol>\n            {memoTimes.current.map((time, i) => (\n              <li key={i}>{time}</li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FibonacciCounterWithUseMemo;\n","import React, { useRef, useState, useCallback } from \"react\";\n\n// useRef\n\nconst FocusedInput: React.FC = () => {\n  const inputEl = useRef({} as any);\n\n  const handleClickToFocus = () => {\n    // `current` points to the mounted text input element\n    inputEl.current.focus();\n  };\n\n  return (\n    <div>\n      <input ref={inputEl} type=\"text\" />\n      <button onClick={handleClickToFocus}>Focus the input</button>\n    </div>\n  );\n};\n\nconst TextArea: React.FC = () => {\n  const textareaEl = useRef({} as any);\n  const textEl = useRef({} as any);\n  const initialText = \"Delete me and write a word\";\n  const [text, setText] = useState<string>(initialText);\n\n  const handleClick = () => {\n    textEl.current.value = text;\n    setText(initialText);\n  };\n\n  return (\n    <div>\n      <textarea\n        ref={textareaEl}\n        value={text}\n        onChange={e => setText(e.target.value)}\n      />\n      <button onClick={() => handleClick()}>save</button>{\" \"}\n      <p ref={textEl}>prev text: {textEl.current.value}</p>\n    </div>\n  );\n};\n\nconst HeaderHeight: React.FC = () => {\n  const [height, setHeight] = useState(0);\n\n  // You can get height of h1 when the node is mounted\n  const measuredRef = useCallback(node => {\n    if (node !== null) {\n      setHeight(node.getBoundingClientRect().height);\n    }\n  }, []);\n\n  return (\n    <div>\n      <h1\n        ref={measuredRef}\n        style={{ color: \"#FFFFFF\", backgroundColor: \"#000000\" }}\n      >\n        Hi! I'm {Math.round(height)}px tall\n      </h1>\n    </div>\n  );\n};\n\nconst SampleOfUseRef: React.FC = () => (\n  <>\n    <FocusedInput />\n    <TextArea />\n    <HeaderHeight />\n  </>\n);\n\nexport default SampleOfUseRef;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// custom hook\n\ninterface Todo {\n  userId: number;\n  title: string;\n  completed: boolean;\n}\n\nenum ActionType {\n  Loading = \"Loading\",\n  Success = \"Success\",\n  Error = \"Error\"\n}\n\nfunction useFetch(todoId: number): [ActionType, Todo | null] {\n  const [status, setStatus] = useState(ActionType.Loading);\n  const [todo, setTodo] = useState(null);\n\n  useEffect((): void => {\n    async function fetch(): Promise<any> {\n      try {\n        const res = await axios.get(\n          `https://jsonplaceholder.typicode.com/todos/${todoId}`\n        );\n        setTodo(res.data);\n        setStatus(ActionType.Success);\n      } catch (e) {\n        setStatus(ActionType.Error);\n        console.error(e.message);\n      }\n    }\n\n    fetch();\n  }, [todoId]);\n\n  return [status, todo];\n}\n\nconst Loading: React.FC = () => <>Loading</>;\n\nconst Error: React.FC = () => <>Error</>;\n\nconst TodoItem: React.FC<Todo> = ({ userId, title, completed }) => {\n  return (\n    <>\n      <p>User ID : {userId}</p>\n      <p>Title : {title}</p>\n      <p>Completed : {completed ? \"true\" : \"false\"}</p>\n    </>\n  );\n};\n\nconst SampleOfCustomHooks: React.FC = () => {\n  const [todoId, setTodoId] = useState<number>(1);\n  const [status, todo] = useFetch(todoId);\n\n  if (todo === null) {\n    return <Loading />;\n  }\n\n  const buttons = (\n    <div>\n      <button onClick={() => setTodoId(todoId + 1)}>+</button>\n      <button onClick={() => setTodoId(1)}>reset</button>\n      <p>Todo ID: {todoId}</p>\n    </div>\n  );\n\n  if (status === ActionType.Loading || status === ActionType.Error) {\n    return (\n      <>\n        {buttons}\n        {status === ActionType.Loading ? <Loading /> : <Error />}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {buttons}\n      <TodoItem {...todo} />\n    </>\n  );\n};\n\nexport default SampleOfCustomHooks;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CounterWithUseState from \"./hooks/CounterWithUseState\";\nimport CounterWithUseContext from \"./hooks/CounterWithUseContext\";\nimport CounterWithUseReducer from \"./hooks/CounterWithUseReducer\";\nimport FibonacciCounterWithUseMemo from \"./hooks/FibonacciCounterWithUseMemo\";\nimport useRefSample from \"./hooks/SampleOfUseRef\";\nimport SampleOfUseEffect from \"./hooks/SampleOfUseEffect\";\nimport SampleOfCustomHooks from \"./hooks/SampleOfCustomHooks\";\n\nconst Header: React.FC = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          useState: <Link to=\"/\">counter</Link>\n        </li>\n        <li>\n          useEffect: <Link to=\"/useeffect\">data fetch</Link>\n        </li>\n        <li>\n          useContext: <Link to=\"/usecontext\">counter</Link>\n        </li>\n        <li>\n          useReducer: <Link to=\"/usereducer\">counter</Link>\n        </li>\n        <li>\n          useMemo: <Link to=\"/usememo\">Fibonacci Counter</Link>\n        </li>\n        <li>\n          useRef, useCallback: <Link to=\"/useref\">text input</Link>\n        </li>\n        <li>\n          Custom Hook: <Link to=\"/customhook\">data fetch</Link>\n        </li>\n      </ul>\n      <p>\n        Code is on{\" \"}\n        <a href=\"https://github.com/KushibikiMashu/react-hooks-typescript-sample\">\n          my GitHub repo\n        </a>\n      </p>\n    </nav>\n  );\n};\n\nconst AppRouter: React.FC = () => {\n  return (\n    <Router basename=\"/react-hooks-typescript-sample/\">\n      <Header />\n      <hr />\n      <div>\n        <Route exact path=\"/\" component={CounterWithUseState} />\n        <Route path=\"/useeffect\" component={SampleOfUseEffect} />\n        <Route path=\"/usecontext\" component={CounterWithUseContext} />\n        <Route path=\"/usereducer\" component={CounterWithUseReducer} />\n        <Route\n          path=\"/usememo\"\n          component={() => <FibonacciCounterWithUseMemo n={36} />}\n        />\n        <Route path=\"/useref\" component={useRefSample} />\n        <Route path=\"/customhook\" component={SampleOfCustomHooks} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"./AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}