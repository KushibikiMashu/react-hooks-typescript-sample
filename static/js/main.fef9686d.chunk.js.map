{"version":3,"sources":["hooks/Todo.tsx","hooks/Counter.tsx","hooks/CounterWithReducer.tsx","hooks/CounterWithContext.tsx","hooks/TodoA.tsx","hooks/FibonacciCounter.tsx","hooks/TextInput.tsx","AppRouter.tsx","serviceWorker.ts","index.tsx"],"names":["Status","Counter","_useState","useState","_useState2","Object","slicedToArray","count","setCount","react_default","a","createElement","Fragment","onClick","ActionType","Loading","TodoItem","_ref","userId","title","completed","Todo","_useState3","_useState4","todoId","setTodoId","_useState5","_useState6","status","setStatus","todo","setTodo","useEffect","_fetch","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","concat","sent","data","Success","t0","console","error","messages","Error","stop","apply","this","arguments","fetch","useFetchTodo","Todo_Loading","Todo_TodoItem","MultiplyCounter","useContext","CounterContext","CounterWithContext_SquareCounter","SquareCounter","createContext","CounterWithContext","Provider","value","CounterWithContext_MultiplyCounter","reducer","state","action","type","Increment","Decrement","Reset","initialState","CounterWithReducer","_useReducer","useReducer","_useReducer2","dispatch","fibonacci","n","FibonacciCounter","props","rerender","memoTimes","useRef","times","memoStart","now","memoResult","useMemo","memoEnd","start","end","current","push","style","display","map","time","i","key","TextInput","inputEl","textareaEl","text","setText","height","setHeight","measuredRef","useCallback","node","getBoundingClientRect","ref","focus","onChange","e","target","Math","round","TodoA","TodoA_Loading","TodoA_TodoItem","AppRouter","react_router_dom","to","react_router","exact","path","component","hooks_FibonacciCounter","Boolean","window","location","hostname","match","ReactDOM","render","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fef9686d.chunk.js","sourcesContent":["import React, { useState, useEffect, Dispatch, SetStateAction } from \"react\";\nimport axios from \"axios\";\n\n// custom hook\n\ninterface Todo {\n  userId: number;\n  title: string;\n  completed: boolean;\n}\n\nenum Status {\n  Loading = \"loading\",\n  Success = \"success\",\n  Error = \"error\"\n}\n\nfunction useFetchTodo(\n  todoId: number,\n  setStatus: Dispatch<SetStateAction<Status>>\n): null | Todo {\n  const [todo, setTodo] = useState(null);\n\n  useEffect((): void => {\n    async function fetch(): Promise<any> {\n      try {\n        const res = await axios.get(\n          `https://jsonplaceholder.typicode.com/todos/${todoId}`\n        );\n        setTodo(res.data);\n        setStatus(Status.Success);\n      } catch (e) {\n        console.error(e.messages);\n        setStatus(Status.Error);\n      }\n    }\n\n    fetch();\n  }, [todoId]);\n\n  return todo;\n}\n\nconst Loading: React.FC = () => <>'Loading'</>;\n\nconst TodoItem: React.FC<Todo> = ({ userId, title, completed }) => {\n  return (\n    <>\n      <p>User ID : {userId}</p>\n      <p>Title : {title}</p>\n      <p>Completed : {completed ? \"true\" : \"false\"}</p>\n    </>\n  );\n};\n\n/**\n * Todo\n */\n// const todoItem = (status: Status, todo: Todo) => {\n//   switch (status) {\n//     case Status.Loading:\n//       return <Loading/>;\n//     case Status.Success:\n//       return <TodoItem {...todo}/>;\n//     case Status.Error:\n//       return <>error</>;\n//     default:\n//       break;\n//   }\n// };\n\nconst Todo: React.FC = () => {\n  const [todoId, setTodoId] = useState<number>(1);\n  const [status, setStatus] = useState<Status>(Status.Loading);\n  const todo = useFetchTodo(todoId, setStatus);\n\n  if (todo === null) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setTodoId(todoId + 1);\n          setStatus(Status.Loading);\n        }}\n      >\n        +\n      </button>\n      <button\n        onClick={() => {\n          setTodoId(1);\n          setStatus(Status.Loading);\n        }}\n      >\n        reset\n      </button>\n      <p>Todo ID: {todoId}</p>\n      {status === Status.Success ? <TodoItem {...todo} /> : Status.Loading}\n    </>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\n// useState\n\nconst Counter: React.FC = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <button onClick={() => setCount(count + 1)}>+</button>\n      {count}\n      <button onClick={() => setCount(count - 1)}>-</button>\n      <button onClick={() => setCount(0)}>reset</button>\n    </>\n  );\n};\n\nexport default Counter;\n","import React, { useReducer } from \"react\";\n\n// useReducer\n\ninterface State {\n  count: number;\n}\n\ninterface Action {\n  type: ActionType;\n}\n\nenum ActionType {\n  Increment = \"Increment\",\n  Decrement = \"Decrement\",\n  Reset = \"Reset\"\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.Increment:\n      return { count: state.count + 1 };\n    case ActionType.Decrement:\n      return { count: state.count - 1 };\n    case ActionType.Reset:\n      return { count: 0 };\n    default:\n      throw new Error();\n  }\n};\n\nconst initialState: State = { count: 0 };\n\nconst CounterWithReducer: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <button onClick={() => dispatch({ type: ActionType.Increment })}>\n        +\n      </button>\n      <button onClick={() => dispatch({ type: ActionType.Decrement })}>\n        -\n      </button>\n      {state.count}\n      <button onClick={() => dispatch({ type: ActionType.Reset })}>\n        reset\n      </button>\n    </>\n  );\n};\n\nexport default CounterWithReducer;\n","import React, { createContext, useContext, useState } from \"react\";\n\n// useContext\n\nconst MultiplyCounter: React.FC = () => {\n  const count = useContext<number>(CounterContext);\n  return (\n    <>\n      <p>multiply: {count * 2}</p>\n      <SquareCounter />\n    </>\n  );\n};\n\nconst SquareCounter: React.FC = () => {\n  const count = useContext<number>(CounterContext);\n  return <p>square: {count * count}</p>;\n};\n\nconst CounterContext = createContext<number>(0);\n\nconst CounterWithContext: React.FC = () => {\n  const [count, setCount] = useState<number>(0);\n  return (\n    <CounterContext.Provider value={count}>\n      {count}\n      <button onClick={() => setCount(count + 1)}>+</button>\n      <MultiplyCounter />\n    </CounterContext.Provider>\n  );\n};\n\nexport default CounterWithContext;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// useEffect\n\ninterface Todo {\n  userId: number;\n  title: string;\n  completed: boolean;\n}\n\nenum Status {\n  Loading = \"loading\",\n  Success = \"success\",\n  Error = \"error\"\n}\n\nconst Loading: React.FC = () => <>'Loading'</>;\n\nconst TodoItem: React.FC<Todo> = ({ userId, title, completed }) => {\n  return (\n    <>\n      <p>User ID : {userId}</p>\n      <p>Title : {title}</p>\n      <p>Completed : {completed ? \"true\" : \"false\"}</p>\n    </>\n  );\n};\n\n/**\n * Todo\n */\n// const todoItem = (status: Status, todo: Todo) => {\n//   switch (status) {\n//     case Status.Loading:\n//       return <Loading/>;\n//     case Status.Success:\n//       return <TodoItem {...todo}/>;\n//     case Status.Error:\n//       return <>error</>;\n//     default:\n//       break;\n//   }\n// };\n\nconst TodoA: React.FC = () => {\n  const [todoId, setTodoId] = useState(1);\n  const [status, setStatus] = useState(Status.Loading);\n  const [todo, setTodo] = useState(null);\n\n  useEffect((): void => {\n    async function fetch(): Promise<any> {\n      try {\n        const res = await axios.get(\n          `https://jsonplaceholder.typicode.com/todos/${todoId}`\n        );\n        setTodo(res.data);\n        setStatus(Status.Success);\n      } catch (e) {\n        console.error(e.messages);\n        setStatus(Status.Error);\n      }\n    }\n\n    fetch();\n  }, [todoId]);\n\n  if (todo === null) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setTodoId(todoId + 1);\n          setStatus(Status.Loading);\n        }}\n      >\n        +\n      </button>\n      <button\n        onClick={() => {\n          setTodoId(1);\n          setStatus(Status.Loading);\n        }}\n      >\n        reset\n      </button>\n      <p>Todo ID: {todoId}</p>\n      {status === Status.Success ? <TodoItem {...todo} /> : Status.Loading}\n    </>\n  );\n};\n\nexport default TodoA;\n","import React, { useState, useMemo, useRef } from \"react\";\nimport now from \"performance-now\";\n\ninterface Target {\n  n: number;\n}\n\n// useMemo\nconst fibonacci = (n: number): number =>\n  n > 2 ? fibonacci(n - 1) + fibonacci(n - 2) : 1;\n\nconst FibonacciCounter: React.FC<Target> = props => {\n  const [_, rerender] = useState<any>(null);\n  const memoTimes = useRef<number[]>([]);\n  const times = useRef<number[]>([]);\n\n  // Memoize\n  const memoStart = now();\n  const memoResult = useMemo(() => fibonacci(props.n), [props.n]);\n  const memoEnd = now();\n\n  // No Memoize\n  const start = now();\n  const result = fibonacci(props.n);\n  const end = now();\n\n  memoTimes.current.push(memoEnd - memoStart);\n  times.current.push(end - start);\n\n  return (\n    <div>\n      <p>target: {props.n}</p>\n      <p>fibonacci: {memoResult}</p>\n      <button onClick={rerender}>rerender</button>\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <p>No Memomized</p>\n          <ol>\n            {times.current.map((time, i) => (\n              <li key={i}>{time}</li>\n            ))}\n          </ol>\n        </div>\n        <div>\n          <p>Memoized</p>\n          <ol>\n            {memoTimes.current.map((time, i) => (\n              <li key={i}>{time}</li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FibonacciCounter;\n","import React, { useRef, useState, useCallback } from \"react\";\n\n// useRef\n\nconst TextInput: React.FC = () => {\n  const inputEl = useRef({} as any);\n  const textareaEl = useRef({} as any);\n  const [text, setText] = useState(\"this will be changed\");\n  const [height, setHeight] = useState(0);\n\n  const handleClickToFocus = () => {\n    // `current` points to the mounted text input element\n    inputEl.current.focus();\n  };\n\n  const toggleText = () => {\n    if (textareaEl.current.value === \"hello!\") {\n      textareaEl.current.value = \"this will be changed\";\n      return;\n    }\n    textareaEl.current.value = \"hello!\";\n  };\n\n  // You can get height of h1 when the node is mounted\n  const measuredRef = useCallback(node => {\n    if (node !== null) {\n      setHeight(node.getBoundingClientRect().height);\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <input ref={inputEl} type=\"text\" />\n        <button onClick={handleClickToFocus}>Focus the input</button>\n      </div>\n      <div>\n        <textarea\n          ref={textareaEl}\n          value={text}\n          onChange={e => setText(e.target.value)}\n        />\n        <button onClick={toggleText}>toggle</button>\n      </div>\n      <div>\n        <h1 ref={measuredRef}>Hello, world</h1>\n        <h2>The above header is {Math.round(height)}px tall</h2>\n      </div>\n    </>\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Counter from \"./hooks/Counter\";\nimport Todo from \"./hooks/Todo\";\nimport CounterWithContext from \"./hooks/CounterWithContext\";\nimport CounterWithReducer from \"./hooks/CounterWithReducer\";\nimport FibonacciCounter from \"./hooks/FibonacciCounter\";\nimport TextInput from \"./hooks/TextInput\";\nimport TodoA from \"./hooks/TodoA\";\n\nconst AppRouter: React.FC = () => {\n  return (\n    <Router>\n      <ul>\n        <li>\n          useState: <Link to=\"/\">counter</Link>\n        </li>\n        <li>\n          useEffect: <Link to=\"/useeffect\">data fetch</Link>\n        </li>\n        <li>\n          useContext: <Link to=\"/usecontext\">counter</Link>\n        </li>\n        <li>\n          useReducer: <Link to=\"/usereducer\">counter</Link>\n        </li>\n        <li>\n          useMemo: <Link to=\"/usememo\">Fibonacci Counter</Link>\n        </li>\n        <li>\n          useRef: <Link to=\"/useref\">text input</Link>\n        </li>\n        <li>\n          Custom Hook: <Link to=\"/customhook\">data fetch</Link>\n        </li>\n      </ul>\n\n      <hr />\n\n      <div>\n        <Route exact path=\"/\" component={Counter} />\n        <Route path=\"/useeffect\" component={Todo} />\n        <Route path=\"/usecontext\" component={CounterWithContext} />\n        <Route path=\"/usereducer\" component={CounterWithReducer} />\n        <Route path=\"/usememo\" component={() => <FibonacciCounter n={36} />} />\n        <Route path=\"/useref\" component={TextInput} />\n        <Route path=\"/customhook\" component={TodoA} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"./AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}